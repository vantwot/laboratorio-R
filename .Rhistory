#Instalar paquete en caso de su ausencia
install.packages(c("readxl", "stringr"))
lapply(c("readxl", "stringr", "dplyr", "visdat"), require, character.only = TRUE)
#Instalar paquete en caso de su ausencia
install.packages(c("readxl", "stringr"))
result_graph = graph_na_fields(xlm_object_trans)
lapply(c("readxl", "stringr", "dplyr", "visdat"), require, character.only = TRUE)
#Instalar paquete en caso de su ausencia
install.packages(c("readxl", "stringr","visdat"))
install.packages(c("readxl", "stringr", "visdat"))
lapply(c("readxl", "stringr", "dplyr", "visdat"), require, character.only = TRUE)
#Instalar paquete en caso de su ausencia
install.packages(c("readxl", "stringr","visdat"))
lapply(c("readxl", "stringr", "dplyr", "visdat"), require, character.only = TRUE)
#Ya tengo el data.frame de la tabla de los paises
xlm_object <- read_xls("paises.xls")
#Como primera observación los fileds de "GRUPOS" se encuentran en mayusculas y minusculas
# --- Corregir --- #
table(xlm_object$GRUPOS)
asia = c(ASIA = "ASIA", Asia = "ASIA", asia = "ASIA")
eu_oriental = c("Europa Oriental" = "EUROPA ORIENTAL")
africa = c(AFRICA = "AFRICA", Africa = "AFRICA", africa = "AFRICA")
iberoamerica = c("Iberoamerica" = "IBEROAMERICA", "iberoamerica" = "IBEROAMERICA")
key_field_groups = c(asia, africa, eu_oriental, iberoamerica)
#------------------------------------------------------#
#-- Universidad del Valle: Escuela de Estadistica    --#
#-- Asignatura: Probabilidad y Estadistica           --#
#-- Integrantes : Santiago Ramirez -                 --#
#--               Deiby Rodriguez -                  --#
#--               Valentina Salamanca - 1842427      --#
#-- Laboratorio                                      --#
#------------------------------------------------------#
#Instalar paquete en caso de su ausencia
#install.packages(c("readxl", "stringr","visdat"))
lapply(c("readxl", "stringr", "dplyr", "visdat"), require, character.only = TRUE)
#Ya tengo el data.frame de la tabla de los paises
xlm_object <- read_xls("paises.xls")
#Como primera observación los fileds de "GRUPOS" se encuentran en mayusculas y minusculas
# --- Corregir --- #
table(xlm_object$GRUPOS)
#**********  Corrección de las variables del campo GRUPOS  **********#
#Esto es para todos, Mejorar la forma
asia = c(ASIA = "ASIA", Asia = "ASIA", asia = "ASIA")
africa = c(AFRICA = "AFRICA", Africa = "AFRICA", africa = "AFRICA")
eu_oriental = c("Europa Oriental" = "EUROPA ORIENTAL")
iberoamerica = c("Iberoamerica" = "IBEROAMERICA", "iberoamerica" = "IBEROAMERICA")
key_field_groups = c(asia, africa, eu_oriental, iberoamerica)
#str_extract(new_ej, regex('\\basia\\b', ignore_case = TRUE))
xlm_object_trans = transform(xlm_object,
GRUPOS = factor(dplyr::recode(GRUPOS, !!!key_field_groups)))
rm(asia, africa, eu_oriental, iberoamerica, key_field_groups)
str(xlm_object_trans)
#**********  Cambio de nombre en la columna PNB  **********#
colnames(xlm_object_trans)[which(names(xlm_object_trans) == "PNB")] = "PIB"
#--------------------------------------------------------------------------#
# --------------    Pruebas Santiago  -------------- #
is.na(xlm_object_trans)  #Lista que me muestra los valores faltantes
x11()
visdat::vis_dat(xlm_object_trans)
names(xlm_object_trans) = xlm_object_trans$País
View(xlm_object)
asia = c(ASIA = "ASIA", Asia = "ASIA", asia = "ASIA")
africa = c(AFRICA = "AFRICA", Africa = "AFRICA", africa = "AFRICA")
eu_oriental = c("Europa Oriental" = "EUROPA ORIENTAL")
iberoamerica = c("Iberoamerica" = "IBEROAMERICA", "iberoamerica" = "IBEROAMERICA")
key_field_groups = c(asia, africa, eu_oriental, iberoamerica)
View(xlm_object_trans)
xlm_object_trans = transform(xlm_object,
GRUPOS = factor(dplyr::recode(GRUPOS, !!!key_field_groups)))
rm(asia, africa, eu_oriental, iberoamerica, key_field_groups)
str(xlm_object_trans)
colnames(xlm_object_trans)[which(names(xlm_object_trans) == "PNB")] = "PIB"
colnames(xlm_object_trans)[which(names(xlm_object_trans) == "PNB")] = "PIB"
View(xlm_object)
View(xlm_object)
#Cambio de nombre en las columnas para eliminar espacions  **********#
colnames(xlm_object_trans)[which(names(xlm_object_trans) == "Tasa natalidad")] = "Tasa_natalidad"
View(xlm_object)
View(xlm_object_trans)
View(xlm_object_trans)
# Carga del archivo de reglas de validación
Rules <- editrules::editfile("consistencia.txt")
#Llamando librerias necesarias
lapply(c("readxl", "stringr", "dplyr", "visdat", "editrules"), require, character.only = TRUE)
#Llamando librerias necesarias
lapply(c("readxl", "stringr", "dplyr", "visdat", "editrules"), require, character.only = TRUE)
install.packages("easypackages")        # Libreria especial para hacer carga automática de librerias
library("easypackages")
lib_req<-c("lubridate","dplyr","visdat","missMDA","mice","DMwR2","editrules", "corrplot")
Rules <- editrules::editfile("consistencia.txt")
lib_req<-c("lubridate","dplyr","visdat","missMDA","mice","DMwR2","editrules", "corrplot")
# Carga del archivo de reglas de validación
Rules <- editrules::editfile("consistencia.txt")
install.packages<-(c("lubridate","dplyr","visdat","missMDA","mice","DMwR2","editrules", "corrplot"))
library("easypackages")
lib_req<-c("lubridate","dplyr","visdat","missMDA","mice","DMwR2","editrules", "corrplot")# Listado de librerias requeridas por el script
easypackages::packages(lib_req)
resting session
lib_req<-c("lubridate","dplyr","visdat","missMDA","mice","DMwR2","editrules", "corrplot")# Listado de librerias requeridas por el script
easypackages::packages(lib_req)
Rules <- editrules::editfile("consistencia.txt")
Rules <- editrules::editfile("consistencia.txt")
Rules <- editrules::editfile("consistencia.txt")
Rules <- editrules::editfile("consistencia.txt")
# Conexión entre las  reglas
windows()
plot(Rules)
# Verificación de las reglas sobres los datos
editrules::violatedEdits(Rules, Datos)
# Carga del archivo de reglas de validación
Rules <- editrules::editfile("consistencia.txt")
# Conexión entre las  reglas
windows()
plot(Rules)
# Verificación de las reglas sobres los datos
editrules::violatedEdits(Rules, xlm_object_trans)
xlm_object_trans$Esperanza.vida.hombre
# Carga del archivo de reglas de validación
Rules <- editrules::editfile("consistencia.txt")
# Conexión entre las  reglas
windows()
plot(Rules)
# Verificación de las reglas sobres los datos
editrules::violatedEdits(Rules, xlm_object_trans)
observacion=c(1,2,3,4,5)
age=c(21,2,18,21,34)
agegroup=c("Adult","child","adult","elderly","child")
height=c(6.0, 3.0 , 5.7, 5.0, -7.0)
status = c("single","Married","MARRIED","widowed","married")
yearsmarried=c(-1,0,20,2,3)
Datos = data.frame(age,agegroup,height,status,yearsmarried)
rm(age,agegroup,height,status,yearsmarried)
View(Datos)
# Declaración de niveles correctos para las variables tipo Factor
level_agegroup <- c(adult="adult", Adult="adult")
level_status <- c(married="married", married="Married", married="MARRIED")
## Modificación del formato y transformación de variables
Datos <- transform(Datos,
agegroup=factor(dplyr::recode(agegroup, !!!level_agegroup)),
status=factor(dplyr::recode(status, !!!level_status))
)
View(Datos)
level_agegroup <- c(adult="adult", Adult="adult")
level_status <- c(married="married", Married="married", MARRIED="married")
## Modificación del formato y transformación de variables
Datos <- transform(Datos,
agegroup=factor(dplyr::recode(agegroup, !!!level_agegroup)),
status=factor(dplyr::recode(status, !!!level_status))
)
View(Datos)
# Carga del archivo de reglas de validación
Rules <- editrules::editfile("Rules_File.txt")
windows()
plot(Rules)
# Verificación de las reglas sobres los datos
editrules::violatedEdits(Rules, Datos)
Valid_Data = editrules::violatedEdits(Rules, Datos)
summary(Valid_Data)
# Carga del archivo de reglas de validación
Rules <- editrules::editfile("consistencia.txt")
# Conexión entre las  reglas
windows()
plot(Rules)
# Verificación de las reglas sobres los datos
editrules::violatedEdits(Rules, xlm_object_trans)
#Leer archivo xls
xlm_object <- read_xls("paises.xls")
lapply(c("readxl", "stringr", "dplyr", "visdat", "editrules"), require, character.only = TRUE)
#Leer archivo xls
xlm_object <- read_xls("paises.xls")
#----------------------------------------------------------------------#
####                1. Inspección de datos                          ####
#----------------------------------------------------------------------#
#Como primera observación los fileds de "GRUPOS" se encuentran en mayusculas y minusculas
table(xlm_object$GRUPOS)
#Haciendo correciones
asia = c(ASIA = "ASIA", Asia = "ASIA", asia = "ASIA")
africa = c(AFRICA = "AFRICA", Africa = "AFRICA", africa = "AFRICA")
eu_oriental = c("Europa Oriental" = "EUROPA ORIENTAL")
iberoamerica = c("Iberoamerica" = "IBEROAMERICA", "iberoamerica" = "IBEROAMERICA")
key_field_groups = c(asia, africa, eu_oriental, iberoamerica)
#str_extract(new_ej, regex('\\basia\\b', ignore_case = TRUE))
xlm_object_trans = transform(xlm_object,
GRUPOS = factor(dplyr::recode(GRUPOS, !!!key_field_groups)))
rm(asia, africa, eu_oriental, iberoamerica, key_field_groups)
str(xlm_object_trans)
#Cambio de nombre en la columna PNB  **********#
colnames(xlm_object_trans)[which(names(xlm_object_trans) == "PNB")] = "PIB"
Rules <- editrules::editfile("consistencia.txt")
# Conexión entre las  reglas
windows()
plot(Rules)
# Verificación de las reglas sobres los datos
editrules::violatedEdits(Rules, xlm_object_trans)
Valid_Data = editrules::violatedEdits(Rules, xlm_object_trans)
summary(Valid_Data)
# Verificación de las reglas sobres los datos
editrules::violatedEdits(Rules, xlm_object_trans)
View(xlm_object_trans)
# Carga del archivo de reglas de validación
Rules <- editrules::editfile("consistencia.txt")
# Conexión entre las  reglas
windows()
plot(Rules)
# Verificación de las reglas sobres los datos
editrules::violatedEdits(Rules, xlm_object_trans)
summary(Valid_Data)
View(xlm_object)
Valid_Data = editrules::violatedEdits(Rules, xlm_object_trans)
summary(Valid_Data)
xlm_object_trans$validaciones <- Valid_Data
xlm_object_trans <- xlm_object_trans[xlm_object_trans$validaciones == FALSE,]
View(xlm_object_trans)
#------------------------------------------------------#
#-- Universidad del Valle: Escuela de Estadistica    --#
#-- Asignatura: Probabilidad y Estadistica           --#
#-- Integrantes : Santiago Ramirez -                 --#
#--               Deiby Rodriguez -                  --#
#--               Valentina Salamanca - 1842427      --#
#-- Laboratorio                                      --#
#------------------------------------------------------#
#------------------------------------------------------#
#   0. Configuración inicial-Librerias requeridas      #
#------------------------------------------------------#
install.packages("easypackages")        # Libreria especial para hacer carga automática de librerias
library("easypackages")
#------------------------------------------------------#
#-- Universidad del Valle: Escuela de Estadistica    --#
#-- Asignatura: Probabilidad y Estadistica           --#
#-- Integrantes : Santiago Ramirez -                 --#
#--               Deiby Rodriguez -                  --#
#--               Valentina Salamanca - 1842427      --#
#-- Laboratorio                                      --#
#------------------------------------------------------#
#------------------------------------------------------#
#   0. Configuración inicial-Librerias requeridas      #
#------------------------------------------------------#
#install.packages("easypackages")        # Libreria especial para hacer carga automática de librerias
library("easypackages")
lib_req<-c("lubridate","dplyr","visdat","missMDA","mice","DMwR2","editrules", "corrplot")# Listado de librerias requeridas por el script
easypackages::packages(lib_req)
#Instalar paquete en caso de su ausencia
#install.packages(c("readxl", "stringr","visdat"))
#Llamando librerias necesarias
lapply(c("readxl", "stringr", "dplyr", "visdat", "editrules"), require, character.only = TRUE)
#Leer archivo xls
xlm_object <- read_xls("paises.xls")
#----------------------------------------------------------------------#
####                1. Inspección de datos                          ####
#----------------------------------------------------------------------#
#Como primera observación los fileds de "GRUPOS" se encuentran en mayusculas y minusculas
table(xlm_object$GRUPOS)
#Haciendo correciones
asia = c(ASIA = "ASIA", Asia = "ASIA", asia = "ASIA")
africa = c(AFRICA = "AFRICA", Africa = "AFRICA", africa = "AFRICA")
eu_oriental = c("Europa Oriental" = "EUROPA ORIENTAL")
iberoamerica = c("Iberoamerica" = "IBEROAMERICA", "iberoamerica" = "IBEROAMERICA")
key_field_groups = c(asia, africa, eu_oriental, iberoamerica)
#str_extract(new_ej, regex('\\basia\\b', ignore_case = TRUE))
xlm_object_trans = transform(xlm_object,
GRUPOS = factor(dplyr::recode(GRUPOS, !!!key_field_groups)))
rm(asia, africa, eu_oriental, iberoamerica, key_field_groups)
str(xlm_object_trans)
#Cambio de nombre en la columna PNB  **********#
colnames(xlm_object_trans)[which(names(xlm_object_trans) == "PNB")] = "PIB"
#----------------------------------------------------------------------#
#### 2. Validación de reglas de consistencia en los datos           ####
#----------------------------------------------------------------------#
# Carga del archivo de reglas de validación
Rules <- editrules::editfile("consistencia.txt")
# Conexión entre las  reglas
windows()
plot(Rules)
# Verificación de las reglas sobres los datos
editrules::violatedEdits(Rules, xlm_object_trans)
Valid_Data = editrules::violatedEdits(Rules, xlm_object_trans)
summary(Valid_Data)
# Visualización del diagnóstico
windows()
plot(Valid_Data)
#Eliminar datos erroneos para más adelante corregir
xlm_object_trans$validaciones <- Valid_Data
xlm_object_trans <- xlm_object_trans[xlm_object_trans$validaciones == FALSE,]
#**********  Mostrar datos faltantes  **********#
is.na(xlm_object_trans)  #Lista que me muestra los valores faltantes
x11()
visdat::vis_dat(xlm_object_trans)
names(xlm_object_trans) = xlm_object_trans$País
Rules <- editrules::editfile("consistencia.txt")
#Eliminación de los errores para más adelante corregirlos
xlm_object_trans$validaciones <- Valid_Data
error1 = xlm_object_trans
error1$Esperanza.vida.mujer = ifelse(error1$validaciones == FALSE,
error1$Esperanza.vida.mujer, NA)
View(error1)
View(xlm_object_trans)
View(Datos)
View(xlm_object_trans)
View(Datos)
View(Datos)
View(xlm_object_trans)
View(xlm_object_trans)
# Carga del archivo de reglas de validación
Rules <- editrules::editfile("consistencia.txt")
# Conexión entre las  reglas
windows()
plot(Rules)
plot(Rules)
# Verificación de las reglas sobres los datos
editrules::violatedEdits(Rules, xlm_object_trans)
Valid_Data = editrules::violatedEdits(Rules, xlm_object_trans)
summary(Valid_Data)
# Visualización del diagnóstico
windows()
plot(Valid_Data)
#Eliminación del error 1 para más adelante corregirlos
xlm_object_trans$validaciones1 <- Valid_Data[, 1]
xlm_object_trans$Esperanza.vida.mujer = ifelse(xlm_object_trans$validaciones1 == FALSE,
xlm_object_trans$Esperanza.vida.mujer, NA)
#Eliminación del error 2 para más adelante corregirlos
xlm_object_trans$validaciones2 <- Valid_Data[, 2]
error2 = xlm_object_trans
error2$Mortalidad.infantil = ifelse(error2$validaciones2 == FALSE,
error2$Tasa.mortalidad, NA)
View(error2)
xlm_object_trans$Mortalidad.infantil = ifelse(xlm_object_trans$validaciones2 == FALSE,
xlm_object_trans$Tasa.mortalidad, NA)
View(error1)
View(error1)
rm(error1)
rm(error2)
View(Rules)
